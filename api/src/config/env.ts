import * as dotenv from 'dotenv';
import { logger } from '../utils/logger';

dotenv.config();

interface EnvConfig {
  NODE_ENV: string;
  PORT: number;
  DATABASE_URL: string;
  REDIS_URL: string;
  JWT_SECRET: string;
  CORS_ORIGIN: string;
  SMART_ACCOUNT_MASTER_KEY: string;
  PAYMASTER_HMAC_SECRET: string;
  UPLOAD_MANAGER_ADDRESS: string;
  CONTENT_REGISTRY_ADDRESS: string;
  LIVEPEER_API_KEY: string;
  LIVEPEER_BASE_URL: string;
  CLOUDFLARE_R2_BUCKET_NAME: string;
  CONTENT_ENCRYPTION_KEY: string;
  PLATFORM_PRIVATE_KEY: string;
  LIVEPEER_WEBHOOK_SECRET: string;
  API_BASE_URL: string;
  LIVEPEER_WEBHOOK_ID: string;
  CCBILL_CLIENT_ACCOUNT: string;
  CCBILL_CLIENT_SUBACCOUNT: string;
  CCBILL_FORM_NAME: string;
  CCBILL_SALT: string;
  CCBILL_WEBHOOK_SECRET: string;
  SEGPAY_PACKAGE_ID: string;
  SEGPAY_MERCHANT_ID: string;
  SEGPAY_API_KEY: string;
  SEGPAY_WEBHOOK_SECRET: string;
  FRONTEND_URL: string;
  HLS_SIGNING_KEY: string;
  HLS_BASE_URL: string;
  MAX_CONCURRENT_SESSIONS: number;
  WEAVIATE_URL: string;
  MEILISEARCH_URL: string;
  MEILISEARCH_MASTER_KEY: string;
  OPENAI_API_KEY: string;
  HUGGINGFACE_API_KEY: string;
  WALLETLESS_PROVIDER: 'biconomy' | 'alchemy' | 'local';
  BICONOMY_API_KEY?: string;
  BICONOMY_BUNDLER_URL?: string;
  BICONOMY_PAYMASTER_URL?: string;
  BICONOMY_DAPP_ID?: string;
  ALCHEMY_API_KEY?: string;
  ALCHEMY_POLICY_ID?: string;
  ALCHEMY_RPC_URL?: string;
  RELAYER_ENABLED: boolean;
  RELAYER_POLL_MS: number;
  RELAYER_SIGNER_MODE?: 'file' | 'kms';
  USDC_CONTRACT_ADDRESS: string;
  REVENUE_SPLITTER_ADDRESS: string;
  NFT_ACCESS_ADDRESS: string;
  PLATFORM_WALLET_ADDRESS: string;
  PAYMASTER_ADDRESS: string;
  PAYMASTER_PRIVATE_KEY: string;
  ENTRY_POINT_ADDRESS: string;
  MAX_GAS_PER_USER_OP: string;
  DAILY_SPENDING_LIMIT: string;
  MONTHLY_SPENDING_LIMIT: string;
  POLYGON_RPC_URL: string;
  MUMBAI_RPC_URL: string;
  POLYGONSCAN_API_KEY?: string;
  GEMINI_API_KEY?: string;
  CHAIN_ID: number;
  SIMPLE_ACCOUNT_FACTORY_ADDRESS: string;
  SESSION_KEY_MANAGER_ADDRESS: string; // New environment variable
  DEV_OWNER_PRIVATE_KEY?: string; // dev/test only; required for E2E if session key manager is not configured
  BUNDLER_URL?: string;
}

const getEnv = (): EnvConfig => {
  const env = process.env;

  const requiredEnv: (keyof EnvConfig)[] = [
    'NODE_ENV', 'PORT', 'DATABASE_URL', 'REDIS_URL', 'JWT_SECRET', 'CORS_ORIGIN',
    'SMART_ACCOUNT_MASTER_KEY', 'PAYMASTER_HMAC_SECRET', 'UPLOAD_MANAGER_ADDRESS',
    'CONTENT_REGISTRY_ADDRESS', 'LIVEPEER_API_KEY', 'LIVEPEER_BASE_URL',
    'CLOUDFLARE_R2_BUCKET_NAME', 'CONTENT_ENCRYPTION_KEY', 'PLATFORM_PRIVATE_KEY',
    'LIVEPEER_WEBHOOK_SECRET', 'API_BASE_URL', 'LIVEPEER_WEBHOOK_ID',
    'CCBILL_CLIENT_ACCOUNT', 'CCBILL_CLIENT_SUBACCOUNT', 'CCBILL_FORM_NAME',
    'CCBILL_SALT', 'CCBILL_WEBHOOK_SECRET', 'SEGPAY_PACKAGE_ID',
    'SEGPAY_MERCHANT_ID', 'SEGPAY_API_KEY', 'SEGPAY_WEBHOOK_SECRET',
    'FRONTEND_URL', 'HLS_SIGNING_KEY', 'HLS_BASE_URL', 'MAX_CONCURRENT_SESSIONS',
    'WEAVIATE_URL', 'MEILISEARCH_URL', 'MEILISEARCH_MASTER_KEY',
    'OPENAI_API_KEY', 'HUGGINGFACE_API_KEY', 'WALLETLESS_PROVIDER',
    'USDC_CONTRACT_ADDRESS', 'REVENUE_SPLITTER_ADDRESS', 'NFT_ACCESS_ADDRESS',
    'PLATFORM_WALLET_ADDRESS', 'PAYMASTER_ADDRESS', 'PAYMASTER_PRIVATE_KEY',
    'ENTRY_POINT_ADDRESS', 'MAX_GAS_PER_USER_OP', 'DAILY_SPENDING_LIMIT',
    'MONTHLY_SPENDING_LIMIT', 'POLYGON_RPC_URL', 'MUMBAI_RPC_URL',
    'RELAYER_ENABLED', 'RELAYER_POLL_MS', 'CHAIN_ID', 'SIMPLE_ACCOUNT_FACTORY_ADDRESS',
    'SESSION_KEY_MANAGER_ADDRESS' // New required environment variable
  ];

  for (const key of requiredEnv) {
    if (!env[key]) {
      logger.error(`Missing required environment variable: ${key}`);
      // In a real app, you might throw an error or exit here
      // For now, we'll just log and proceed with undefined/defaults
    }
  }

  // Conditionally check DEV_OWNER_PRIVATE_KEY if SESSION_KEY_MANAGER_ADDRESS is not set
  if (!env.SESSION_KEY_MANAGER_ADDRESS && !env.DEV_OWNER_PRIVATE_KEY) {
    logger.warn('DEV_OWNER_PRIVATE_KEY is recommended for E2E/dev when SESSION_KEY_MANAGER_ADDRESS is not configured.');
  }

  if (!env.BUNDLER_URL) {
    logger.error('Missing required environment variable: BUNDLER_URL');
  }

  return {
    NODE_ENV: env.NODE_ENV || 'development',
    PORT: parseInt(env.PORT || '3001'),
    DATABASE_URL: env.DATABASE_URL || 'postgresql://reelverse:reelverse_password@localhost:5432/reelverse_db',
    REDIS_URL: env.REDIS_URL || 'redis://localhost:6379',
    JWT_SECRET: env.JWT_SECRET || 'super-secret-jwt-key',
    CORS_ORIGIN: env.CORS_ORIGIN || 'http://localhost:5173',
    SMART_ACCOUNT_MASTER_KEY: env.SMART_ACCOUNT_MASTER_KEY || 'a'.repeat(64), // Placeholder
    PAYMASTER_HMAC_SECRET: env.PAYMASTER_HMAC_SECRET || 'b'.repeat(64), // Placeholder
    UPLOAD_MANAGER_ADDRESS: env.UPLOAD_MANAGER_ADDRESS || '0x0000000000000000000000000000000000000001',
    CONTENT_REGISTRY_ADDRESS: env.CONTENT_REGISTRY_ADDRESS || '0x0000000000000000000000000000000000000002',
    LIVEPEER_API_KEY: env.LIVEPEER_API_KEY || 'dummy-livepeer-key',
    LIVEPEER_BASE_URL: env.LIVEPEER_BASE_URL || 'https://livepeer.studio/api',
    CLOUDFLARE_R2_BUCKET_NAME: env.CLOUDFLARE_R2_BUCKET_NAME || 'dummy-r2-bucket',
    CONTENT_ENCRYPTION_KEY: env.CONTENT_ENCRYPTION_KEY || 'c'.repeat(32), // 32-byte key
    PLATFORM_PRIVATE_KEY: env.PLATFORM_PRIVATE_KEY || 'd'.repeat(64), // 32-byte hex key
    LIVEPEER_WEBHOOK_SECRET: env.LIVEPEER_WEBHOOK_SECRET || 'e'.repeat(64),
    API_BASE_URL: env.API_BASE_URL || 'http://localhost:3001',
    LIVEPEER_WEBHOOK_ID: env.LIVEPEER_WEBHOOK_ID || 'dummy-webhook-id',
    CCBILL_CLIENT_ACCOUNT: env.CCBILL_CLIENT_ACCOUNT || '123456',
    CCBILL_CLIENT_SUBACCOUNT: env.CCBILL_CLIENT_SUBACCOUNT || '0000',
    CCBILL_FORM_NAME: env.CCBILL_FORM_NAME || 'cc_form',
    CCBILL_SALT: env.CCBILL_SALT || 'dummy-salt',
    CCBILL_WEBHOOK_SECRET: env.CCBILL_WEBHOOK_SECRET || 'f'.repeat(64),
    SEGPAY_PACKAGE_ID: env.SEGPAY_PACKAGE_ID || 'dummy-package',
    SEGPAY_MERCHANT_ID: env.SEGPAY_MERCHANT_ID || 'dummy-merchant',
    SEGPAY_API_KEY: env.SEGPAY_API_KEY || 'dummy-segpay-key',
    SEGPAY_WEBHOOK_SECRET: env.SEGPAY_WEBHOOK_SECRET || 'g'.repeat(64),
    FRONTEND_URL: env.FRONTEND_URL || 'http://localhost:5173',
    HLS_SIGNING_KEY: env.HLS_SIGNING_KEY || 'h'.repeat(64),
    HLS_BASE_URL: env.HLS_BASE_URL || 'https://hls.reelverse.com',
    MAX_CONCURRENT_SESSIONS: parseInt(env.MAX_CONCURRENT_SESSIONS || '5'),
    WEAVIATE_URL: env.WEAVIATE_URL || 'http://localhost:8080',
    MEILISEARCH_URL: env.MEILISEARCH_URL || 'http://localhost:7700',
    MEILISEARCH_MASTER_KEY: env.MEILISEARCH_MASTER_KEY || 'development-master-key-change-in-production',
    OPENAI_API_KEY: env.OPENAI_API_KEY || 'dummy-openai-key',
    HUGGINGFACE_API_KEY: env.HUGGINGFACE_API_KEY || 'dummy-huggingface-key',
    WALLETLESS_PROVIDER: (env.WALLETLESS_PROVIDER as 'biconomy' | 'alchemy' | 'local') || 'biconomy',
    BICONOMY_API_KEY: env.BICONOMY_API_KEY,
    BICONOMY_BUNDLER_URL: env.BICONOMY_BUNDLER_URL,
    BICONOMY_PAYMASTER_URL: env.BICONOMY_PAYMASTER_URL,
    BICONOMY_DAPP_ID: env.BICONOMY_DAPP_ID,
    ALCHEMY_API_KEY: env.ALCHEMY_API_KEY,
    ALCHEMY_POLICY_ID: env.ALCHEMY_POLICY_ID,
    ALCHEMY_RPC_URL: env.ALCHEMY_RPC_URL,
    RELAYER_ENABLED: env.RELAYER_ENABLED === 'true',
    RELAYER_POLL_MS: parseInt(env.RELAYER_POLL_MS || '5000'),
    RELAYER_SIGNER_MODE: (env.RELAYER_SIGNER_MODE as 'file' | 'kms') || undefined,
    USDC_CONTRACT_ADDRESS: env.USDC_CONTRACT_ADDRESS || '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',
    REVENUE_SPLITTER_ADDRESS: env.REVENUE_SPLITTER_ADDRESS || '0x0000000000000000000000000000000000000003',
    NFT_ACCESS_ADDRESS: env.NFT_ACCESS_ADDRESS || '0x0000000000000000000000000000000000000004',
    PLATFORM_WALLET_ADDRESS: env.PLATFORM_WALLET_ADDRESS || '0x0000000000000000000000000000000000000005',
    PAYMASTER_ADDRESS: env.PAYMASTER_ADDRESS || '0x0000000000000000000000000000000000000006',
    PAYMASTER_PRIVATE_KEY: env.PAYMASTER_PRIVATE_KEY || 'i'.repeat(64),
    ENTRY_POINT_ADDRESS: env.ENTRY_POINT_ADDRESS || '0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789',
    MAX_GAS_PER_USER_OP: env.MAX_GAS_PER_USER_OP || '10000000000000000', // 0.01 ETH
    DAILY_SPENDING_LIMIT: env.DAILY_SPENDING_LIMIT || '1000000000000000000', // 1 ETH
    MONTHLY_SPENDING_LIMIT: env.MONTHLY_SPENDING_LIMIT || '10000000000000000000', // 10 ETH
    POLYGON_RPC_URL: env.POLYGON_RPC_URL || 'https://polygon-rpc.com',
    MUMBAI_RPC_URL: env.MUMBAI_RPC_URL || 'https://rpc-mumbai.maticvigil.com',
    POLYGONSCAN_API_KEY: env.POLYGONSCAN_API_KEY,
    GEMINI_API_KEY: env.GEMINI_API_KEY,
    CHAIN_ID: parseInt(env.CHAIN_ID || '11155111'), // Default to Sepolia
    SIMPLE_ACCOUNT_FACTORY_ADDRESS: env.SIMPLE_ACCOUNT_FACTORY_ADDRESS || '0x9406Cc6185a346906296840746129e125aF35fEd', // Default SimpleAccountFactory address for Sepolia
    SESSION_KEY_MANAGER_ADDRESS: env.SESSION_KEY_MANAGER_ADDRESS || '0x0000000000000000000000000000000000000007', // Placeholder
    DEV_OWNER_PRIVATE_KEY: env.DEV_OWNER_PRIVATE_KEY,
    BUNDLER_URL: env.BUNDLER_URL,
  };
};

export const env = getEnv();