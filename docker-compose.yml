version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: reelverse-postgres
    environment:
      POSTGRES_DB: reelverse_db
      POSTGRES_USER: reelverse
      POSTGRES_PASSWORD: reelverse_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./api/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - reelverse-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U reelverse -d reelverse_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: reelverse-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - reelverse-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Weaviate Vector Database
  weaviate:
    image: semitechnologies/weaviate:1.22.4
    container_name: reelverse-weaviate
    ports:
      - "8080:8080"
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'none'
      ENABLE_MODULES: 'text2vec-openai,text2vec-cohere,text2vec-huggingface,ref2vec-centroid,generative-openai,qna-openai'
      CLUSTER_HOSTNAME: 'node1'
    volumes:
      - weaviate_data:/var/lib/weaviate
    networks:
      - reelverse-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/v1/.well-known/ready"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Meilisearch for hybrid search
  meilisearch:
    image: getmeili/meilisearch:v1.5
    container_name: reelverse-meilisearch
    ports:
      - "7700:7700"
    environment:
      MEILI_ENV: development
      MEILI_MASTER_KEY: development-master-key-change-in-production
    volumes:
      - meilisearch_data:/meili_data
    networks:
      - reelverse-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7700/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Backend
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: reelverse-api
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://reelverse:reelverse_password@postgres:5432/reelverse_db
      REDIS_URL: redis://redis:6379
      WEAVIATE_URL: http://weaviate:8080
      MEILISEARCH_URL: http://meilisearch:7700
      MEILISEARCH_MASTER_KEY: development-master-key-change-in-production
      CORS_ORIGIN: http://localhost:5173
      JWT_SECRET: development-jwt-secret-change-in-production
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      HUGGINGFACE_API_KEY: ${HUGGINGFACE_API_KEY}
    ports:
      - "3001:3001"
    volumes:
      - ./api:/app
      - /app/node_modules
      - api_logs:/app/logs
    networks:
      - reelverse-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      weaviate:
        condition: service_healthy
      meilisearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Frontend (Vite dev server)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: reelverse-frontend
    environment:
      VITE_API_URL: http://localhost:3001/api/v1
      VITE_WS_URL: ws://localhost:3001
    ports:
      - "5173:5173"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/api
    networks:
      - reelverse-network
    depends_on:
      - api
    restart: unless-stopped

  # One-off idempotency sweep (run manually or schedule externally)
  sweep-idempotency:
    image: node:20-alpine
    container_name: reelverse-sweep-idempotency
    working_dir: /app
    volumes:
      - ./api:/app
    command: sh -lc "npm install --no-audit --no-fund --prefix /app && npx ts-node src/scripts/sweepIdempotency.ts"
    environment:
      DATABASE_URL: postgresql://reelverse:reelverse_password@postgres:5432/reelverse_db
      REDIS_URL: redis://redis:6379
      NODE_ENV: production
    depends_on:
      - postgres
    networks:
      - reelverse-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  weaviate_data:
    driver: local
  meilisearch_data:
    driver: local
  api_logs:
    driver: local

networks:
  reelverse-network:
    driver: bridge